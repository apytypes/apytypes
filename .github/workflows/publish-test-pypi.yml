name: Build wheels and publish APyTypes to PyPi

on:
  # Save CI by only running this on release branches or tags.
  push:
    branches:
      - main
      - v[0-9]+.[0-9]+.x
    tags:
      - v*
  # Also allow running this action on PRs if requested by applying the
  # "Run cibuildwheel" label.
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

jobs:

  # Wheel-building job-step using cibuildwheel
  build-wheel:
    name: Build wheel ${{ matrix.os }} ðŸ“¦
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      github.event_name == 'pull_request' && (
        (
          github.event.action == 'labeled' &&
          github.event.label.name == 'CI: Run cibuildwheel'
        ) ||
        contains(github.event.pull_request.labels.*.name,
                 'CI: Run cibuildwheel')
      )
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest] #  windows-11-arm,

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true
      - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756  # v1.13.0  # Active MSVC environment on Windows virtual env
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.0.1 setuptools_scm

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: apytypes-dist-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  # Source-distribution building job-step
  build-sdist:
    name: Build source distribution
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      github.event_name == 'pull_request' && (
        (
          github.event.action == 'labeled' &&
          github.event.label.name == 'CI: Run cibuildwheel'
        ) ||
        contains(github.event.pull_request.labels.*.name,
                 'CI: Run cibuildwheel')
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
      - name: Install Python Build
        run: python -m pip install build
      - name: Run Python Build
        run: python -m build --sdist
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: apytypes-dist-sdist-${{ strategy.job-index }}
          path: dist/*.tar.gz
          if-no-files-found: error

  # Official publication to PyPi (on new tags)
  publish-to-pypi:
    name: Publish to PyPI ðŸ“¦
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build-wheel
    - build-sdist
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/apytypes/
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the distributions
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
      with:
        pattern: apytypes-dist-*
        path: dist
        merge-multiple: true
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
