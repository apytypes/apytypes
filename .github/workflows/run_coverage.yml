name: Coverage
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      with:
        fetch-depth: 0
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install -yy lcov
        python -m pip install --upgrade pip
        python -m pip install pytest-cov gcovr ninja meson-python numpy setuptools_scm
    - name: Install APyTypes
      run: |
        git fetch --tags
        export CPPFLAGS='-O0 --coverage -fprofile-abs-path'
        python -m pip install --no-deps --no-build-isolation -v --editable .
        unset CPPFLAGS
    - name: Test with pytest
      run: |
        pytest lib/test --cov-report=xml --cov=lib --log-level=DEBUG --color=yes
    - name: Format coverage data
      if: ${{ !cancelled()}}
      run: |
        lcov --rc lcov_branch_coverage=1 --capture --directory . \
          --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --output-file coverage.info \
          --extract coverage.info $PWD/src/'*' $PWD/lib/'*'
        lcov --rc lcov_branch_coverage=1 --list coverage.info
         find . -name '*.gc*' -delete
        # gcovr --xml-pretty --exclude-unreachable-branches --print-summary -o cobertura.xml --root $PWD
    - name: Upload coverage reports to Codecov
      if: ${{ !cancelled()}}
      uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3  # v5.3.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
