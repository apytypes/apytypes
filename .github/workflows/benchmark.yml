name: Benchmarks
on:
  pull_request:
    branches: [ "main" ]

jobs:
  benchmark:
    name: Performance regression check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install APyTypes (and dependencies)
        run: python -m pip install --upgrade pip && python -m pip install -v .[benchmark]
      # Download previous benchmark result from cache (if exists)
      - name: Download previous benchmark data
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      # Run benchmark with `go test -bench` and stores the output to a file
      - name: Run fixed array benchmark
        run: cd benchmark && pytest ci_fixed_array_benchmarks.py --benchmark-warmup=on --benchmark-warmup-iterations=1 --benchmark-json output_fixed_array.json
      - name: Run float array benchmark
        run: cd benchmark && pytest ci_float_array_benchmarks.py --benchmark-warmup=on --benchmark-warmup-iterations=1 --benchmark-json output_float_array.json
      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: APyTypes Fixed-Point Array Benchmarks
          # What benchmark tool the output.txt came from
          tool: 'pytest'
          # Where the output from the benchmark tool is stored
          output-file-path: benchmark/output_fixed_array.json
          # Where the previous data file is stored
          external-data-json-path: ./cache/output_fixed_array.json
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Workflow will fail when an alert happens
          fail-on-alert: true
      # Run `github-action-benchmark` action
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: APyTypes Floating-Point Array Benchmarks
          # What benchmark tool the output.txt came from
          tool: 'pytest'
          # Where the output from the benchmark tool is stored
          output-file-path: benchmark/output_float_array.json
          # Where the previous data file is stored
          external-data-json-path: ./cache/output_float_array.json
          # GitHub API token to make a commit comment
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Enable alert commit comment
          comment-on-alert: true
          # Workflow will fail when an alert happens
          fail-on-alert: true
