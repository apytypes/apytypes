from typing import overload, Sequence
from apytypes import APyFloatArray, APyFixedArray
from apytypes.typing import APyArray

@overload
def squeeze(
    a: APyFloatArray, axis: int | Sequence[int] | None = None
) -> APyFloatArray: ...
@overload
def squeeze(
    a: APyFixedArray, axis: int | Sequence[int] | None = None
) -> APyFixedArray: ...
def squeeze(a: APyArray, axis: int | Sequence[int] | None = None) -> APyArray: ...
@overload
def convolve(a: APyFixedArray, v: APyFixedArray, mode="full") -> APyFixedArray: ...
@overload
def convolve(a: APyFloatArray, v: APyFloatArray, mode="full") -> APyFloatArray: ...
def convolve(a: APyArray, v: APyArray, mode="full") -> APyArray: ...
@overload
def reshape(a: APyFloatArray, new_shape: tuple[int, ...]) -> APyFloatArray: ...
@overload
def reshape(a: APyFixedArray, new_shape: tuple[int, ...]) -> APyFixedArray: ...
def reshape(a: APyArray, new_shape: tuple[int, ...]) -> APyArray: ...
@overload
def shape(a: APyFloatArray) -> tuple[int, ...]: ...
@overload
def shape(a: APyFixedArray) -> tuple[int, ...]: ...
def shape(a: APyArray) -> tuple[int, ...]: ...
